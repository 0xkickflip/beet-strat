{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x8fA82f61153E7746112Cb4e9de1033504C3294eE",
      "txHash": "0x00f799a7275317b86e812a597937320f2bfbc0327615d0964ef83a4a843c1687",
      "kind": "uups"
    },
    {
      "address": "0xc2f81876ed0075A6ebD99e0faCeCf5E90C210A0F",
      "txHash": "0x453fa1c4d6a75983b35a9f823437dfb71e09b596be889e18aff46c39bedbb267",
      "kind": "uups"
    },
    {
      "address": "0xBc0E513Def7604463456106Ed9c6dc66808aA643",
      "txHash": "0x0438304dc0fc9fa0cd62f3a5982313efb1808c706f1f805ff88d2374514efc2e",
      "kind": "uups"
    },
    {
      "address": "0x3B9058D450F214796B581A7A011bF5Db7eA31724",
      "txHash": "0x4066cd97e2ec3b0c22affd62c16d0de189d89e07b435b94eca8c7e049b471005",
      "kind": "uups"
    },
    {
      "address": "0x29060f43b53865E6Eb1279573c99f9dA22bB2F97",
      "txHash": "0x1386df89fd845fed471bb514174a1fce532d58c05d42e86d981500c3729ee283",
      "kind": "uups"
    },
    {
      "address": "0xbFAC229d495C057C9f5Ee0f0fD294319FC2223e5",
      "txHash": "0x2c438992318ab4929867cdb706f5b48cdbe1045eedef0b79fa5863ff959a6de1",
      "kind": "uups"
    }
  ],
  "impls": {
    "d1945eb7c4dd3c620d98f54c0294922189d5a04aa529fba7769a8d56ab51d600": {
      "address": "0x850aB9BCB1a38808526f682466683947000BFDe3",
      "txHash": "0xbebf2be496c42db1895a9f94dd5335ca0f0f8c1c84dce7d63a01a9fb151f36a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3137_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "harvestLog",
            "type": "t_array(t_struct(Harvest)6537_storage)dyn_storage",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:27"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "harvestLogCadence",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:28"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "lastHarvestTimestamp",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:29"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "upgradeProposalTime",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:31"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "cascadingAccess",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:51"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:59"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "vault",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:60"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "strategistRemitter",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:61"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "totalFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:87"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "callFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:88"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "treasuryFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:89"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "strategistFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:90"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "securityFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:91"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "want",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:31"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "underlyings",
            "type": "t_array(t_contract(IAsset)7420)dyn_storage",
            "src": "contracts\\ReaperStrategyLennonLong.sol:32"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "joinErc",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:33"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "reward",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:34"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "gauge",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:42"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "beetsPoolId",
            "type": "t_bytes32",
            "src": "contracts\\ReaperStrategyLennonLong.sol:43"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "rewardJoinErcPool",
            "type": "t_bytes32",
            "src": "contracts\\ReaperStrategyLennonLong.sol:44"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "joinErcPosition",
            "type": "t_uint256",
            "src": "contracts\\ReaperStrategyLennonLong.sol:45"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "rewardUsdcPool",
            "type": "t_bytes32",
            "src": "contracts\\ReaperStrategyLennonLong.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(IAsset)7420)dyn_storage": {
            "label": "contract IAsset[]"
          },
          "t_contract(IAsset)7420": {
            "label": "contract IAsset"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Harvest)6537_storage)dyn_storage": {
            "label": "struct ReaperBaseStrategyv3.Harvest[]"
          },
          "t_struct(Harvest)6537_storage": {
            "label": "struct ReaperBaseStrategyv3.Harvest",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "vaultSharePrice",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3137_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3137_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2836_storage"
              }
            ]
          },
          "t_struct(Set)2836_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6071a419d36162339bbe8d302263ee88b70bbea98933205490e70379319f5049": {
      "address": "0xCa77Bd3147b68e869d9bDC05B7FDe789Be905afC",
      "txHash": "0xa9b436a37415638287b8398f46f5ef9a17407c440640bfa84bc9c06c2308b9db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3137_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "harvestLog",
            "type": "t_array(t_struct(Harvest)7332_storage)dyn_storage",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:27"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "harvestLogCadence",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:28"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "lastHarvestTimestamp",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:29"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "upgradeProposalTime",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:31"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "cascadingAccess",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:51"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:59"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "vault",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:60"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "strategistRemitter",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:61"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "totalFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:87"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "callFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:88"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "treasuryFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:89"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "strategistFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:90"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "securityFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:91"
          },
          {
            "contract": "ReaperStrategyLennonLong2",
            "label": "want",
            "type": "t_address",
            "src": "contracts\\test\\ReaperStrategyLennonLong2.sol:31"
          },
          {
            "contract": "ReaperStrategyLennonLong2",
            "label": "underlyings",
            "type": "t_array(t_contract(IAsset)8215)dyn_storage",
            "src": "contracts\\test\\ReaperStrategyLennonLong2.sol:32"
          },
          {
            "contract": "ReaperStrategyLennonLong2",
            "label": "joinErc",
            "type": "t_address",
            "src": "contracts\\test\\ReaperStrategyLennonLong2.sol:33"
          },
          {
            "contract": "ReaperStrategyLennonLong2",
            "label": "reward",
            "type": "t_address",
            "src": "contracts\\test\\ReaperStrategyLennonLong2.sol:34"
          },
          {
            "contract": "ReaperStrategyLennonLong2",
            "label": "gauge",
            "type": "t_address",
            "src": "contracts\\test\\ReaperStrategyLennonLong2.sol:42"
          },
          {
            "contract": "ReaperStrategyLennonLong2",
            "label": "beetsPoolId",
            "type": "t_bytes32",
            "src": "contracts\\test\\ReaperStrategyLennonLong2.sol:43"
          },
          {
            "contract": "ReaperStrategyLennonLong2",
            "label": "rewardJoinErcPool",
            "type": "t_bytes32",
            "src": "contracts\\test\\ReaperStrategyLennonLong2.sol:44"
          },
          {
            "contract": "ReaperStrategyLennonLong2",
            "label": "joinErcPosition",
            "type": "t_uint256",
            "src": "contracts\\test\\ReaperStrategyLennonLong2.sol:45"
          },
          {
            "contract": "ReaperStrategyLennonLong2",
            "label": "rewardUsdcPool",
            "type": "t_bytes32",
            "src": "contracts\\test\\ReaperStrategyLennonLong2.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(IAsset)8215)dyn_storage": {
            "label": "contract IAsset[]"
          },
          "t_contract(IAsset)8215": {
            "label": "contract IAsset"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Harvest)7332_storage)dyn_storage": {
            "label": "struct ReaperBaseStrategyv3.Harvest[]"
          },
          "t_struct(Harvest)7332_storage": {
            "label": "struct ReaperBaseStrategyv3.Harvest",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "vaultSharePrice",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3137_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3137_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2836_storage"
              }
            ]
          },
          "t_struct(Set)2836_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "90b5b2e71e7437bf839a733df812da62ed3941ef85030c5b264555c8497a07c5": {
      "address": "0x52e0163ca9abEEa75E2437F2c9095f3FD807f5c4",
      "txHash": "0x577a4e833d470692afa7128ffaae0df3385c2e1be12d4b7a3cab46ebed27732c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3137_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "harvestLog",
            "type": "t_array(t_struct(Harvest)7332_storage)dyn_storage",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:27"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "harvestLogCadence",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:28"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "lastHarvestTimestamp",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:29"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "upgradeProposalTime",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:31"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "cascadingAccess",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:51"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:59"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "vault",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:60"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "strategistRemitter",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:61"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "totalFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:87"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "callFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:88"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "treasuryFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:89"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "strategistFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:90"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "securityFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:91"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "want",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:31"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "underlyings",
            "type": "t_array(t_contract(IAsset)8215)dyn_storage",
            "src": "contracts\\ReaperStrategyLennonLong.sol:32"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "joinErc",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:33"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "reward",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:34"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "gauge",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:42"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "beetsPoolId",
            "type": "t_bytes32",
            "src": "contracts\\ReaperStrategyLennonLong.sol:43"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "rewardJoinErcPool",
            "type": "t_bytes32",
            "src": "contracts\\ReaperStrategyLennonLong.sol:44"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "joinErcPosition",
            "type": "t_uint256",
            "src": "contracts\\ReaperStrategyLennonLong.sol:45"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "rewardUsdcPool",
            "type": "t_bytes32",
            "src": "contracts\\ReaperStrategyLennonLong.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(IAsset)8215)dyn_storage": {
            "label": "contract IAsset[]"
          },
          "t_contract(IAsset)8215": {
            "label": "contract IAsset"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Harvest)7332_storage)dyn_storage": {
            "label": "struct ReaperBaseStrategyv3.Harvest[]"
          },
          "t_struct(Harvest)7332_storage": {
            "label": "struct ReaperBaseStrategyv3.Harvest",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "vaultSharePrice",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3137_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3137_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2836_storage"
              }
            ]
          },
          "t_struct(Set)2836_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "85fa6c992d839f06fadda39e0d9618f8d43ddc451dc131f88e1bbb91964f6e93": {
      "address": "0x343D5191A9F2610c0F16a00F13AF91677317aA16",
      "txHash": "0xca5572029e91d3180ef84fbea6abbc99cb499c80cd585983d38d3887b65892fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3137_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "harvestLog",
            "type": "t_array(t_struct(Harvest)6528_storage)dyn_storage",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:27"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "harvestLogCadence",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:28"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "lastHarvestTimestamp",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:29"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "upgradeProposalTime",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:31"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "cascadingAccess",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:51"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:59"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "vault",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:60"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "strategistRemitter",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:61"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "totalFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:87"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "callFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:88"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "treasuryFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:89"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "strategistFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:90"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "securityFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:91"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "want",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:31"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "underlyings",
            "type": "t_array(t_contract(IAsset)7411)dyn_storage",
            "src": "contracts\\ReaperStrategyLennonLong.sol:32"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "joinErc",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:33"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "reward",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:34"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "gauge",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:42"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "beetsPoolId",
            "type": "t_bytes32",
            "src": "contracts\\ReaperStrategyLennonLong.sol:43"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "joinErcPosition",
            "type": "t_uint256",
            "src": "contracts\\ReaperStrategyLennonLong.sol:45"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "WETHUsdcPool",
            "type": "t_bytes32",
            "src": "contracts\\ReaperStrategyLennonLong.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(IAsset)7411)dyn_storage": {
            "label": "contract IAsset[]"
          },
          "t_contract(IAsset)7411": {
            "label": "contract IAsset"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Harvest)6528_storage)dyn_storage": {
            "label": "struct ReaperBaseStrategyv3.Harvest[]"
          },
          "t_struct(Harvest)6528_storage": {
            "label": "struct ReaperBaseStrategyv3.Harvest",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "vaultSharePrice",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3137_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3137_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2836_storage"
              }
            ]
          },
          "t_struct(Set)2836_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1a90e493e425f57efce2604cc54f02a707529759379e5bc123bdd4a52ed35767": {
      "address": "0xe9a1283FF0465Bdc15076d8c07DBa1cD06699d76",
      "txHash": "0x3dff182fe42f8e123e2bb5dc398d2cd8d0a59a6b74360c267772a3aaa7940602",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3137_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "harvestLog",
            "type": "t_array(t_struct(Harvest)6528_storage)dyn_storage",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:27"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "harvestLogCadence",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:28"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "lastHarvestTimestamp",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:29"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "upgradeProposalTime",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:31"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "cascadingAccess",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:51"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:59"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "vault",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:60"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "strategistRemitter",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:61"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "totalFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:87"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "callFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:88"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "treasuryFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:89"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "strategistFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:90"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "securityFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:91"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "want",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:31"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "underlyings",
            "type": "t_array(t_contract(IAsset)7411)dyn_storage",
            "src": "contracts\\ReaperStrategyLennonLong.sol:32"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "joinErc",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:33"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "reward",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:34"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "gauge",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyLennonLong.sol:42"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "beetsPoolId",
            "type": "t_bytes32",
            "src": "contracts\\ReaperStrategyLennonLong.sol:43"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "joinErcPosition",
            "type": "t_uint256",
            "src": "contracts\\ReaperStrategyLennonLong.sol:45"
          },
          {
            "contract": "ReaperStrategyLennonLong",
            "label": "WETHUsdcPool",
            "type": "t_bytes32",
            "src": "contracts\\ReaperStrategyLennonLong.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(IAsset)7411)dyn_storage": {
            "label": "contract IAsset[]"
          },
          "t_contract(IAsset)7411": {
            "label": "contract IAsset"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Harvest)6528_storage)dyn_storage": {
            "label": "struct ReaperBaseStrategyv3.Harvest[]"
          },
          "t_struct(Harvest)6528_storage": {
            "label": "struct ReaperBaseStrategyv3.Harvest",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "vaultSharePrice",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3137_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)3137_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2836_storage"
              }
            ]
          },
          "t_struct(Set)2836_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f1e1b714def3ad195a6b8a5e175fd6dcef08b19388eb1992c7d21b8cba23556d": {
      "address": "0x1337709aAB907f678DD22CF0b74F786f8052Dc4E",
      "txHash": "0xe31c2d2b8e7caad6ab00b0965f51bc4c1433c4f54acd932163faf654a5015f92",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3355_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "harvestLog",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_struct(Harvest)6894_storage)dyn_storage",
            "contract": "ReaperBaseStrategyv3",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:27"
          },
          {
            "label": "harvestLogCadence",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv3",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:28"
          },
          {
            "label": "lastHarvestTimestamp",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv3",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:29"
          },
          {
            "label": "upgradeProposalTime",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv3",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:31"
          },
          {
            "label": "cascadingAccess",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ReaperBaseStrategyv3",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:51"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "ReaperBaseStrategyv3",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:59"
          },
          {
            "label": "vault",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ReaperBaseStrategyv3",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:60"
          },
          {
            "label": "strategistRemitter",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "ReaperBaseStrategyv3",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:61"
          },
          {
            "label": "totalFee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv3",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:87"
          },
          {
            "label": "callFee",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv3",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:88"
          },
          {
            "label": "treasuryFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv3",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:89"
          },
          {
            "label": "strategistFee",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv3",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:90"
          },
          {
            "label": "securityFee",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv3",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:91"
          },
          {
            "label": "want",
            "offset": 0,
            "slot": "364",
            "type": "t_address",
            "contract": "ReaperStrategyRocketFuel",
            "src": "contracts\\ReaperStrategyRocketFuel.sol:31"
          },
          {
            "label": "underlyings",
            "offset": 0,
            "slot": "365",
            "type": "t_array(t_contract(IAsset)7777)dyn_storage",
            "contract": "ReaperStrategyRocketFuel",
            "src": "contracts\\ReaperStrategyRocketFuel.sol:32"
          },
          {
            "label": "joinErc",
            "offset": 0,
            "slot": "366",
            "type": "t_address",
            "contract": "ReaperStrategyRocketFuel",
            "src": "contracts\\ReaperStrategyRocketFuel.sol:33"
          },
          {
            "label": "reward",
            "offset": 0,
            "slot": "367",
            "type": "t_address",
            "contract": "ReaperStrategyRocketFuel",
            "src": "contracts\\ReaperStrategyRocketFuel.sol:34"
          },
          {
            "label": "gauge",
            "offset": 0,
            "slot": "368",
            "type": "t_address",
            "contract": "ReaperStrategyRocketFuel",
            "src": "contracts\\ReaperStrategyRocketFuel.sol:42"
          },
          {
            "label": "beetsPoolId",
            "offset": 0,
            "slot": "369",
            "type": "t_bytes32",
            "contract": "ReaperStrategyRocketFuel",
            "src": "contracts\\ReaperStrategyRocketFuel.sol:43"
          },
          {
            "label": "rewardOPPoolId",
            "offset": 0,
            "slot": "370",
            "type": "t_bytes32",
            "contract": "ReaperStrategyRocketFuel",
            "src": "contracts\\ReaperStrategyRocketFuel.sol:44"
          },
          {
            "label": "joinErcPosition",
            "offset": 0,
            "slot": "371",
            "type": "t_uint256",
            "contract": "ReaperStrategyRocketFuel",
            "src": "contracts\\ReaperStrategyRocketFuel.sol:45"
          },
          {
            "label": "WETHUsdcOPPoolId",
            "offset": 0,
            "slot": "372",
            "type": "t_bytes32",
            "contract": "ReaperStrategyRocketFuel",
            "src": "contracts\\ReaperStrategyRocketFuel.sol:50"
          },
          {
            "label": "intermediateToken",
            "offset": 0,
            "slot": "373",
            "type": "t_address",
            "contract": "ReaperStrategyRocketFuel",
            "src": "contracts\\ReaperStrategyRocketFuel.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_contract(IAsset)7777)dyn_storage": {
            "label": "contract IAsset[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Harvest)6894_storage)dyn_storage": {
            "label": "struct ReaperBaseStrategyv3.Harvest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAsset)7777": {
            "label": "contract IAsset",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3355_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3355_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3054_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Harvest)6894_storage": {
            "label": "struct ReaperBaseStrategyv3.Harvest",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "vaultSharePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
